var { generate, traverse } = require("escodegen")
var { parse } = require("esprima")

var { define } = require("./utils")

class Document {

  constructor(source) {
    var ast = parse(source)

    console.log(ast)
  }

  get documentElement() {}

  createAttribute() {}

  createElement() {}

  createDocumentFragment() {}

  getElementsByTagName() {}

}

class Node {

  constructor() {}

}

module.exports = function(source) {

  new Document(source)

}

/*

class Document extends Node {
  documentElement,
  createAttribute,
  createElement,
  createDocumentFragment,
  getElementsByTagName
}

class Node {
  attributes,

  childNodes,
  firstChild,
  lastChild,
  nextSibling,
  nodeName,
  nodeType,
  parentNode,
  previousSibling,

  appendChild,
  cloneNode,
  hasChildNodes,
  insertBefore,
  removeChild,
  replaceChild
}

class NodeList {
  length,
  item
}

class NamedNodeMap {
  getNamedItem,
  item,
  removeNamedItem,
  setNamedItem,

  length
}

class Attr extends Node {
  name,
  specified,
  value
}

class Element extends Node {
  tagName

  getAttribute
  getAttributeNode

  getElementsByTagName

  removeAttribute
  removeAttributeNode

  setAttribute
  setAttributeNode
}

*/

